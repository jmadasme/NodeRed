[
  {
    "id": "31-35",
    "type": "tab",
    "label": "Flujos 31-35 avanzados",
    "disabled": false,
    "info": "Colección de flujos 31 a 35 (propósitos avanzados, un objetivo por flujo)"
  },

  // === 31) Multipanel (dos grupos en una pestaña) ===
  {
    "id": "g31a",
    "type": "ui_group",
    "z": "",
    "name": "Panel A",
    "tab": "t31",
    "order": 1,
    "disp": true,
    "width": "6"
  },
  {
    "id": "g31b",
    "type": "ui_group",
    "z": "",
    "name": "Panel B",
    "tab": "t31",
    "order": 2,
    "disp": true,
    "width": "6"
  },
  {
    "id": "t31",
    "type": "ui_tab",
    "z": "",
    "name": "Dashboard 31-35",
    "icon": "dashboard",
    "order": 5
  },
  {
    "id": "f31a",
    "type": "inject",
    "z": "31-35",
    "name": "Random 0-100 (cada 2s)",
    "props": [{"p":"payload"}],
    "repeat": "2",
    "once": true,
    "onceDelay": "0.5",
    "topic": "",
    "payloadType": "num",
    "x": 190,
    "y": 80,
    "wires": [["d31a","d31b"]]
  },
  {
    "id": "d31a",
    "type": "ui_gauge",
    "z": "31-35",
    "name": "KPI Panel A",
    "group": "g31a",
    "order": 1,
    "gtype": "gage",
    "title": "Carga (%)",
    "label": "%",
    "format": "{{value}}",
    "min": 0,
    "max": 100,
    "seg1": 40,
    "seg2": 80,
    "x": 430,
    "y": 60,
    "wires": []
  },
  {
    "id": "d31b",
    "type": "ui_chart",
    "z": "31-35",
    "name": "Tendencia Panel B",
    "group": "g31b",
    "order": 1,
    "width": 0,
    "height": 0,
    "label": "Tendencia",
    "chartType": "line",
    "legend": "false",
    "x": 440,
    "y": 100,
    "wires": [[],[]]
  },

  // === 32) Maestro-Esclavo: switch maestro habilita/inhabilita flujo de datos ===
  {
    "id": "s32",
    "type": "ui_switch",
    "z": "31-35",
    "name": "Maestro",
    "label": "Habilitar control",
    "group": "g31a",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple":"false",
    "topic": "master",
    "x": 170,
    "y": 160,
    "wires": [["gate32set"]]
  },
  {
    "id": "sl32",
    "type": "ui_slider",
    "z": "31-35",
    "name": "Esclavo (solo si ON)",
    "label": "Velocidad",
    "group": "g31a",
    "order": 3,
    "width": 0,
    "height": 0,
    "passthru": true,
    "topic": "velocidad",
    "min": 0,
    "max": 100,
    "step": 1,
    "x": 170,
    "y": 200,
    "wires": [["gate32pass"]]
  },
  {
    "id": "gate32set",
    "type": "function",
    "z": "31-35",
    "name": "Set flag maestro",
    "func": "flow.set('master_on', msg.payload === true);\nreturn null;",
    "outputs": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "x": 410,
    "y": 160,
    "wires": []
  },
  {
    "id": "gate32pass",
    "type": "function",
    "z": "31-35",
    "name": "Gate (pasa si maestro ON)",
    "func": "if (flow.get('master_on')) {\n   return msg;\n}\n// si maestro OFF, mostrar estado sin pasar\nnode.status({fill:\"red\",shape:\"ring\",text:\"bloqueado\"});\nreturn null;",
    "outputs": 1,
    "noerr": 0,
    "x": 430,
    "y": 200,
    "wires": [["txt32"]]
  },
  {
    "id": "txt32",
    "type": "ui_text",
    "z": "31-35",
    "group": "g31a",
    "order": 4,
    "width": 0,
    "height": 0,
    "name": "Salida esclavo",
    "label": "Velocidad aplicada",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "x": 660,
    "y": 200,
    "wires": []
  },

  // === 33) Imagen dinámica desde URL ingresada por el usuario ===
  {
    "id": "ti33",
    "type": "ui_text_input",
    "z": "31-35",
    "name": "URL de imagen",
    "label": "Pega URL de imagen",
    "group": "g31b",
    "order": 2,
    "width": 0,
    "height": 0,
    "mode": "text",
    "topic": "imgurl",
    "x": 190,
    "y": 280,
    "wires": [["tpl33"]]
  },
  {
    "id": "tpl33",
    "type": "ui_template",
    "z": "31-35",
    "group": "g31b",
    "name": "Viewer",
    "order": 3,
    "width": 6,
    "height": 6,
    "format": "<div style=\"text-align:center\">\n  <img ng-if=\"msg.payload\" ng-src=\"{{msg.payload}}\" style=\"max-width:100%;max-height:360px;object-fit:contain;border-radius:12px;border:1px solid #ddd;padding:6px\"/>\n  <div ng-if=\"!msg.payload\" style=\"opacity:.6;padding:12px\">Ingresa una URL de imagen válida</div>\n</div>",
    "x": 440,
    "y": 280,
    "wires": []
  },

  // === 34) Tarjeta KPI con umbrales (colores dinámicos) ===
  {
    "id": "inj34",
    "type": "inject",
    "z": "31-35",
    "name": "Random 0-120 (cada 3s)",
    "props": [{"p":"payload"}],
    "repeat": "3",
    "once": true,
    "onceDelay": "0.5",
    "payloadType": "num",
    "x": 190,
    "y": 360,
    "wires": [["fn34"]]
  },
  {
    "id": "fn34",
    "type": "function",
    "z": "31-35",
    "name": "Umbrales → color",
    "func": "const v = Number(msg.payload)||0;\nlet color = '#4caf50'; // verde\nif (v >= 80 && v < 100) color = '#ff9800'; // ámbar\nif (v >= 100) color = '#f44336'; // rojo\nmsg.payload = {value: v, color};\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 430,
    "y": 360,
    "wires": [["tpl34"]]
  },
  {
    "id": "tpl34",
    "type": "ui_template",
    "z": "31-35",
    "group": "g31a",
    "name": "KPI Card",
    "order": 5,
    "width": 6,
    "height": 3,
    "format": "<div style=\"border-radius:14px;border:1px solid #ddd;padding:14px;background:#fff;box-shadow:0 2px 8px rgba(0,0,0,.06)\">\n  <div style=\"font-size:14px;opacity:.7\">Consumo</div>\n  <div style=\"display:flex;align-items:center;gap:12px\">\n    <div style=\"width:14px;height:14px;border-radius:50%;background:{{msg.payload.color}}\"></div>\n    <div style=\"font-size:32px;font-weight:600\">{{msg.payload.value}}</div>\n    <div>unid</div>\n  </div>\n  <div style=\"height:8px;border-radius:6px;background:#eee;margin-top:10px;overflow:hidden\">\n    <div style=\"height:100%;width:{{msg.payload.value}}%;background:{{msg.payload.color}}\"></div>\n  </div>\n</div>",
    "x": 680,
    "y": 360,
    "wires": []
  },

  // === 35) Formulario de configuración → tabla de registros acumulados ===
  {
    "id": "form35",
    "type": "ui_form",
    "z": "31-35",
    "name": "Config",
    "label": "Configurar",
    "group": "g31b",
    "order": 4,
    "width": 0,
    "height": 0,
    "options": [
      { "label":"Nombre", "value":"nombre", "type":"text" },
      { "label":"Límite", "value":"limite", "type":"number" },
      { "label":"Activo", "value":"activo", "type":"checkbox" }
    ],
    "formValue": {"nombre":"","limite":50,"activo":true},
    "payload": "",
    "submit": "Enviar",
    "topic": "cfg",
    "x": 170,
    "y": 440,
    "wires": [["fn35"]]
  },
  {
    "id": "fn35",
    "type": "function",
    "z": "31-35",
    "name": "Acumular en array",
    "func": "let arr = flow.get('cfg_rows') || [];\nconst row = msg.payload || {};\nrow.timestamp = new Date().toISOString();\narr.push(row);\nflow.set('cfg_rows', arr);\nmsg.payload = arr;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 420,
    "y": 440,
    "wires": [["table35"]]
  },
  {
    "id": "table35",
    "type": "ui_table",
    "z": "31-35",
    "group": "g31b",
    "order": 5,
    "width": 0,
    "height": 0,
    "name": "Historial",
    "label": "Registros",
    "x": 650,
    "y": 440,
    "wires": []
  },
  {
    "id": "btn35reset",
    "type": "ui_button",
    "z": "31-35",
    "name": "Reset",
    "group": "g31b",
    "order": 6,
    "width": 0,
    "height": 0,
    "label": "Limpiar historial",
    "icon": "fa-trash",
    "payload": "[]",
    "payloadType": "json",
    "topic": "",
    "x": 190,
    "y": 480,
    "wires": [["fn35reset"]]
  },
  {
    "id": "fn35reset",
    "type": "function",
    "z": "31-35",
    "name": "Clear array",
    "func": "flow.set('cfg_rows', []);\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 420,
    "y": 480,
    "wires": [["table35"]]
  }
]
